services:
  registry:
    image: registry:2.8.3
    ports:
      - "5000:5000"
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt
      REGISTRY_HTTP_TLS_KEY: /certs/registry.key
    volumes:
      - ./registry/auth:/auth
      - ./registry/certs:/certs
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: 0.2

  buildkit:
    image: moby/buildkit:v0.22.0
    privileged: true
    container_name: buildkit
    ports:
      - "1234:1234"
    volumes:
      - ./buildkit/entrypoint.sh:/entrypoint.sh
      - ./buildkit/buildkitd.toml:/etc/buildkit/buildkitd.toml
      - ./registry/certs:/certs
      - ./buildkit/certs:/buildkit
    entrypoint: ["/entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "buildctl debug workers"]
      interval: 3s
      timeout: 3s
      retries: 10

  kube:
    image: rancher/k3s:v1.31.1-k3s1
    command:
      - server
      - --tls-san=kube
      - "--kubelet-arg=eviction-hard=imagefs.available<5%,nodefs.available<10%"
      - "--kubelet-arg=eviction-soft=imagefs.available<10%,nodefs.available<15%"
      - "--kubelet-arg=eviction-soft-grace-period=imagefs.available=1m,nodefs.available=1m"
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_KUBECONFIG_MODE=666
      - K3S_URL=https://kube:6443
    volumes:
      - k3s:/var/lib/rancher/k3s
      - ./k3s_data/docker_images:/var/lib/rancher/k3s/agent/images
      - ./k3s_data/k3s/:/etc/rancher/k3s/
    expose:
      - "6443" # Kubernetes API Server
      - "80" # Ingress controller port 80
      - "443" # Ingress controller port 443
    ports:
      - 6443:6443
      - 8080:80
      - 8081:443
    deploy:
      resources:
        limits:
          memory: 1000m
          cpus: 0.5

  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    ports:
      - "8000:8000"
      - "40000:40000"
    env_file: staging.env
    restart: always
    volumes:
      - ./buildkit/certs:/certs/buildkit.crt
      - ./registry/certs:/certs/registry.crt
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: 0.3

volumes:
  k3s:
    driver: local
