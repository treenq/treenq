FROM ubuntu:latest

ENV _BUILDAH_STARTED_IN_USERNS="" BUILDAH_ISOLATION=chroot

RUN apt-get update
RUN apt-get -y install buildah bats btrfs-progs git go-md2man golang libapparmor-dev libglib2.0-dev libgpgme11-dev libseccomp-dev libselinux1-dev make runc skopeo libbtrfs-dev wget fuse-overlayfs && rm -rf /var/lib/apt/lists/*
RUN mkdir -p /etc/containers && \
    mkdir -p /var/lib/shared/overlay-images /var/lib/shared/overlay-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock
RUN wget -P /tmp https://go.dev/dl/go1.24.1.linux-arm64.tar.gz
RUN tar -C /usr/local -xzf "/tmp/go1.24.1.linux-arm64.tar.gz"
RUN rm "/tmp/go1.24.1.linux-arm64.tar.gz"

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH
RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"

WORKDIR $GOPATH

RUN mkdir -p /etc/containers/ && touch /etc/containers/registries.conf && echo 'unqualified-search-registries=["docker.io"]' > /etc/containers/registries.conf
COPY policy.json /etc/containers/policy.json
COPY storage.conf /etc/containers/storage.conf 

COPY . .

RUN go build -o /go/app ./cmd/tt/t.go
CMD /go/app

# FROM fedora:latest
#
# ENV _BUILDAH_STARTED_IN_USERNS="" BUILDAH_ISOLATION=chroot
#
# RUN mkdir -p /var/lib/shared/overlay-images
# RUN mkdir -p /etc/containers/ && touch /etc/containers/storage.conf
# RUN yum -y install wget gpgme-devel buildah fuse-overlayfs --exclude container-selinux; rm -rf /var/cache /var/log/dnf* /var/log/yum.* 
# RUN sed -i -e 's|^#mount_program|mount_program|g' -e '/additionalimage.*/a "/var/lib/shared",' /etc/containers/storage.conf
# RUN mkdir -p /var/lib/shared/overlay-images /var/lib/shared/overlay-layers; touch /var/lib/shared/overlay-images/images.lock; touch /var/lib/shared/overlay-layers/layers.lock
# RUN wget -P /tmp https://go.dev/dl/go1.24.1.linux-arm64.tar.gz 
# RUN tar -C /usr/local -xzf "/tmp/go1.24.1.linux-arm64.tar.gz" 
# RUN rm "/tmp/go1.24.1.linux-arm64.tar.gz"
#
# ENV GOPATH /go
# ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH
# RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
#
# WORKDIR $GOPATH
#
# RUN mkdir -p /etc/containers/ && echo 'unqualified-search-registries=["docker.io"]' > /etc/containers/registries.conf
# COPY policy.json /etc/containers/policy.json
#
# COPY . .
#
# RUN go build -o /go/app ./cmd/tt/t.go
# CMD /go/app
#
