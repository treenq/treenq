services:
  postgres:
    image: postgres:16.3
    container_name: treenq-postgres
    restart: always
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: tq
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tq"]
      interval: 3s
      timeout: 3s
      retries: 10

  postgres-ui:
    image: sosedoff/pgweb:0.16.2
    environment:
      - PGWEB_DATABASE_URL=postgres://postgres@postgres:5432/tq?sslmode=disable
    ports:
      - 8082:8081
    restart: on-failure
    depends_on:
      - postgres

  registry:
    image: registry:2.8.3
    container_name: treenq-registry
    ports:
      - "5000:5000"
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt
      REGISTRY_HTTP_TLS_KEY: /certs/registry.key
    volumes:
      - ./auth:/auth
      - ./certs:/certs

  kube:
    image: rancher/k3s:v1.31.1-k3s1
    container_name: treenq-kube
    command:
      - server
      - --tls-san=kube
      - "--kubelet-arg=eviction-hard=imagefs.available<5%,nodefs.available<10%"
      - "--kubelet-arg=eviction-soft=imagefs.available<10%,nodefs.available<15%"
      - "--kubelet-arg=eviction-soft-grace-period=imagefs.available=1m,nodefs.available=1m"
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    env_file: dev.env
    volumes:
      - k3s:/var/lib/rancher/k3s
      # - ./k3s_data/kubeconfig:/output
      - ./k3s_data/docker_images:/var/lib/rancher/k3s/agent/images
      - ./k3s_data/k3s/:/etc/rancher/k3s/
    expose:
      - "6443" # Kubernetes API Server
      - "80" # Ingress controller port 80
      - "443" # Ingress controller port 443
    ports:
      - 6443:6443
      - 8080:80
      - 8081:443

  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: treenq-server
    ports:
      - "8000:8000"
      - "40000:40000"
    privileged: true
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    env_file: dev.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    volumes:
      - ./certs:/certs

volumes:
  pgdata:
    driver: local
  k3s:
    driver: local
