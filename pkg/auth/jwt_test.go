package auth

import (
	"encoding/base64"
	"fmt"
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestJwt(t *testing.T) {
	issuerID := "Iv23liIcdZc9iw5WTylS"
	privateKey, err := base64.StdEncoding.DecodeString("LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDh0VHZGUzZzYzBvYTBvKzZvVWtLbWYvUXU2RDFhRXAzaUNGQnF0Wm5WelJ2QlBTClZJV0dReFNIYU5yNE8yNjU2MFA3WHMzS1BCdUlDWmNoczFqWmV4ZS9xSmlhVTRJbmJnTFZHbmNRZ3E1ZHRYMGQKeVBhWGhUUHpidUlmUXBRSnhwL2loRVc4Vnp6bGNCaE1mNGcwZDROVlRTRUp0ZG5JeDlYRGVNMVR2L3N2aE1neApyZ0dNb3RSYnY5dlE2RVJnSnlCelI2SFVYWlNkSDNtOW80eS9aMVFobEViSWlkOS81ejdEZzl0V0lNR1lib1hvCjBmalJETnRwYWdGcjJiK1VQMUtxU3NIdXRXS0J3OVd2dmMyT0hESHRRWm5MaUdmUmpNY0VyK1FyS1I3SmhpMlEKVytubXJXTlhXbTRoNzI5N2JQMmtVU3RXRWFiNW1IQUI2QjNYM3dJREFRQUJBb0lCQUNpbGlBcVhua2ZQK2pvaApwNzBraXlBSmVsZ09tRW1jK1J5VXR4dU5QclVTRGlWYVR2OGREeHlVajV2WWVJbjIwK0kyT1d5bkowNmxOejdrClBWbjBhSUp2YVhHT1lrODgrbkthSnVxMGNHcDF1T0RVYkh2WEZ5cGxVRkF0dHJoZno4RldBOHB2T1lyeCs2ZWIKZWV5ME5DQmdXcmxQVUY5cnlEcEhsZlg4cDk0MWluRHNmSWd2YmcwQ2hIbkF1NU9NQWdjN0d4WlJ1SjlqY2FkdgpQSURVbkM0blUxVldGZUtXRWgzWnMwVWRtWDQ4NWJ4dDNhSWNPdWFXOVljajBoOW5wZFEvVWQzVFhaZHpyU2t0CkRZSU9ia2x3czVlK0dxaWVPVFVJV3MyYWpnTDZmdkF1S3ljVERvNUhyQ3U0dGZYaUUvYVNQZzhzSDBvSEhGQkMKMlB1Ly9Na0NnWUVBL1NaajkyOGJ1aUFEZGt4SkFlOGUvVTZUZFU3czM2VGVVS2E0V2FnN2JlbHlXRWwxSnluVgoxdDB6NFF0ekQrNThOcHBPK1AvVVdDb3hLS0lOaW1DOFZ4NmM3cFUwOFVrU255RVZsUXpEdE8yVWhSY013Q1M2CjNWeFFCWUZQYU9hQ1BqUTdZdyt5a1B4NWhsSnJYeTRUenBHYlprUkdkaWQrbzFKcitaelB1NVVDZ1lFQXlnc28KcUt5SWdPR2Q5NkVPTHpoSkF0dXRoK0ZoeDlRbDk4ZmREMFNWb2loUW53N0ZXMlZNclBvU1BIS0Q2VVRvUGJuTgphT1pKVVZYOFh3b0R5dndQY2grRVFGek5PZ3JpT0RjUjdHOTlQSlhnRWdGUWE3NGhub3pkcnlMTjZDYldmaXlLCm1tak5PSVRoMjk4N01uUEpsT3V6UVowYStRYXBvR0ZWdnJUWnlLTUNnWUIyZ3ZkL3llTklJbDZjamlBTHFMOXcKUk0zaHVENUtnT3VYQkVYL3F6T1BSQi9FMXpiaVM4S1JZV005TXRmK0dGN01UVGMxZU1jWE0wRnFUVnRiY2VnYQpQUG1vOCs4aUdseCtaTVd1enBmOFp0RUY4WUdGbm14ZzN5dVRPRE5OMzhRUGpQSlVjTy9lMG1PdUQzMjJ4R0ovCmJVazcrakNtZGR6aVp0Nm5yOUxNZFFLQmdEOUZMVTljOEVaRDRQOEo3WEkyRXc4VkVndUtOZCtvL05iU1BOU3EKS3Aya09GTUhBaUN6NFVZTjdhWUdTbTdEU0dNRUMySTlNMXFJTGNicFVQVEE2R2xabTBXNGlnQVNKbk5xTTIreQpIaXJaMkZockZ1OFdsRnFkVEZLcStJWXBtMlBadVBIUHZleGtHSUtOTG5HSE51b3V3V3pic1BXbzgzZW80M3djCkVGTTNBb0dCQUxYdmhxYVNwaXJlK0NWZjMrQ2xaOG9KbUxoZ3Y0R3hXdGVkU0JWaDNRdlE1OCtxVXhGQklHeHYKQnBIMnRwdkxBSndab3h3emIrcnR6bGtvZCtvcTd4TFBUTmNnUFlkOUJxVjUzR1NPR3YxL0xpb3V6a1hmTmdPaQpGRUpGcktPOTlwTlJlYnh1UHhKUkhWaHNmWWxsSGRvSzZpT3pHM29mYmNPL1JqMjFVVEt2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t")
	require.NoError(t, err)
	fmt.Println(string(privateKey))
	issuer := NewJwtIssuer(issuerID, []byte(privateKey), nil, time.Minute*15)
	token, err := issuer.GenerateJwtToken(nil)
	assert.NoError(t, err)
	fmt.Println(token)
}
